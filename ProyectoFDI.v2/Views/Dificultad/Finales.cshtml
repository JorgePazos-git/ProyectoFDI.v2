@model IEnumerable<ProyectoFDI.v2.Models.DetalleCompetenciaDificultad>

@{
    ViewData["Title"] = "Finales";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
</head>

<h1>RESULTADOS DIFICULTAD</h1>

<h4>Agregar Resultados</h4>
<hr />

<div class="row">
    <div class="col-md-4">
        @Html.Partial("_CompetenciaInfo")
    </div>
</div>
<hr />

<h4>Finales</h4>

<table class="table">
    <thead>
        <tr>
            <th>
                Puesto de Clasificacion
            </th>
            <th>
                Deportista
            </th>
            <th>
                Resultado Final
            </th>
            <th>
                Opciones
            </th>
        </tr>
    </thead>
    <tbody>
        @if (Model != null)
        {
            @foreach (var item in Model.Where(m => m.IdCom == ViewBag.idcompetencia))
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PuestoInicialRes)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.IdDepNavigation.NombresDep) @Html.DisplayFor(modelItem => item.IdDepNavigation.ApellidosDep)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.FinalRes)
                    </td>
                    <td>
                        <input type="button" class="agregar btn btn-info" data-id="@item.IdDetalleDificultad" value="Agregar Finales" />
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">GANADOR</h5>
        <button id="ganadorBtn" class="btn btn-primary" style="display: none;">Mostrar</button>

        <table id="tablaGanador" class="table" style="display: none;">
            <thead>
                <tr>
                    <th>Deportista</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>

        @*<button id="verResultadosBtn" class="btn btn-success" style="display: none;">Reporte</button>*@
        <a href="@Url.Action("MostrarPDFNuevaPagina", "Dificultad", new { competencia = ViewBag.idcompetencia })" class="btn btn-danger" target="_blank">
            <svg xmlns="http://www.w3.org/2000/svg" height="20" width="20" viewBox="0 0 512 512"><!--!Font Awesome Free 6.5.1 by @@fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.--><path fill="#ffffff" d="M64 464l48 0 0 48-48 0c-35.3 0-64-28.7-64-64L0 64C0 28.7 28.7 0 64 0L229.5 0c17 0 33.3 6.7 45.3 18.7l90.5 90.5c12 12 18.7 28.3 18.7 45.3L384 304l-48 0 0-144-80 0c-17.7 0-32-14.3-32-32l0-80L64 48c-8.8 0-16 7.2-16 16l0 384c0 8.8 7.2 16 16 16zM176 352l32 0c30.9 0 56 25.1 56 56s-25.1 56-56 56l-16 0 0 32c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-48 0-80c0-8.8 7.2-16 16-16zm32 80c13.3 0 24-10.7 24-24s-10.7-24-24-24l-16 0 0 48 16 0zm96-80l32 0c26.5 0 48 21.5 48 48l0 64c0 26.5-21.5 48-48 48l-32 0c-8.8 0-16-7.2-16-16l0-128c0-8.8 7.2-16 16-16zm32 128c8.8 0 16-7.2 16-16l0-64c0-8.8-7.2-16-16-16l-16 0 0 96 16 0zm80-112c0-8.8 7.2-16 16-16l48 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-32 0 0 32 32 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-32 0 0 48c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-64 0-64z" /></svg>    Reporte
        </a>
    </div>
</div>

<script>
    // Manejar el clic en el botón "Agregar Clasificaciones"
    $(".agregar").click(function () {

        var botonAgregar = $(this);
        // Obtener el nombre del deportista de la fila actual
        var deportistaNombre = $(this).closest("tr").find("td:eq(1)").text();

        // Crear un formulario de entrada de datos para clasificaciones
        Swal.fire({
            title: 'Agregar Final',
            html:
                `<input id="final" class="swal2-input" placeholder="Resultado Final">`,
            showCancelButton: true,
            confirmButtonText: 'Guardar',
            cancelButtonText: 'Cancelar',
            focusConfirm: false,
            preConfirm: () => {
                // Obtener los valores ingresados
                var final = document.getElementById('final').value;
                var idDetalle = botonAgregar.data("id");

                // Realizar una solicitud AJAX para enviar los valores al controlador
                $.ajax({
                    type: 'POST',
                    url: '/Dificultad/AgregarFinal', // Reemplaza 'TuControlador' con el nombre de tu controlador
                    data: {
                        idDetalle: idDetalle,
                        deportistaNombre: deportistaNombre,
                        final: final
                    },
                    success: function (response) {
                        if (response.success) {
                            // Actualizar el valor en la tabla
                            var fila = botonAgregar.closest("tr");
                            fila.find("td:eq(2)").text(final);

                            // Verificar si todos los resultados están llenos después de actualizar
                            verificarResultadosLlenos();

                            Swal.fire({
                                title: 'Resultados Guardados',
                                text: 'Los valores se han guardado correctamente en la base de datos.',
                                icon: 'success'
                            });
                        } else {
                            Swal.fire({
                                title: 'Error',
                                text: 'Hubo un error al guardar los valores.',
                                icon: 'error'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            title: 'Error',
                            text: 'Hubo un error en la solicitud al servidor.',
                            icon: 'error'
                        });
                    }
                });
            }
        });
    });

    function verificarResultadosLlenos() {
        var todosLlenos = true;
        $("table tbody tr").each(function () {
            var final = $(this).find("td:eq(2)").text();
            if (final === "") {
                todosLlenos = false;
                return false; // Rompe el bucle si encuentra una fila incompleta
            }
        });

        // Muestra u oculta el botón en función de si todos los campos están llenos
        if (todosLlenos) {
            $("#ganadorBtn").show();
        } else {
            $("#ganadorBtn").hide();
        }
    }

    // Llama a la función al cargar la página para verificar el estado inicial
    verificarResultadosLlenos();
</script>

<script>
    $(document).ready(function () {
        // Función para asignar puestos y mostrar la tabla de deportistas ordenados
        function asignarPuestos() {
            $.ajax({
                type: 'POST',
                url: '/Dificultad/AsignarPuestosFinal', // Reemplaza 'TuControlador' con el nombre de tu controlador
                data: {
                    // Puedes enviar cualquier información adicional que necesites aquí
                    idCompetencia: @ViewBag.idcompetencia
                    },
                success: function (response) {
                    if (response.success) {
                        // Mostrar la tabla de deportistas ordenados
                        var tabla = $("#tablaGanador");
                        tabla.show();

                        // Limpiar la tabla (excepto la cabecera)
                        tabla.find("tbody tr").remove();

                        console.log(response.deportistas);

                        // Agregar los deportistas ordenados a la tabla
                        $.each(response.deportistas, function (index, deportista) {
                            var fila = `<tr><td>${deportista.idDepNavigation.nombresDep} ${deportista.idDepNavigation.apellidosDep}</td></tr>`;
                            tabla.find("tbody").append(fila);
                        });

                        Swal.fire({
                            title: 'Clasificaciones Guardadas',
                            text: 'Los valores se han guardado correctamente en la base de datos.',
                            icon: 'success',
                            html: 'Puestos calculados: '
                        });

                        // Ocultar el botón después de asignar los puestos
                        $("#ganadorBtn").hide();
                        $("#verResultadosBtn").show();
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: 'Hubo un error al asignar los puestos.',
                            icon: 'error'
                        });
                    }
                },
                error: function (xhr, status, error) {
                    console.log(xhr.responseText);
                    Swal.fire({
                        title: 'Error',
                        text: 'Hubo un error en la solicitud al servidor.',
                        icon: 'error'

                    });
                }
            });
        }

        // Manejar el clic en el botón "Guardar Resultados"
        $("#ganadorBtn").click(function () {
            asignarPuestos();
        });
    });
</script>

<script>
    $(document).ready(function () {
        // Manejar el clic en el botón "Reporte"
        $("#verResultadosBtn").click(function () {
            fetch('/Dificultad/ExportarExcel/' + @ViewBag.idcompetencia)
                .then(response => response.blob())
                .then(blob => {
                    // Descargar el archivo
                    const url = window.URL.createObjectURL(new Blob([blob]));
                    const link = document.createElement('a');
                    link.href = url;
                    link.setAttribute('download', 'reporte.xlsx');
                    document.body.appendChild(link);
                    link.click();
                });
        });
    });

</script>

